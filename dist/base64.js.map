{"version":3,"file":"base64.js","sources":["digits.js","atob.js","btoa.js","utf8.js","base64.js"],"sourcesContent":["\nexport default 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n","\nimport b64 from './digits';\n\nvar _atob;\n\n/*globals atob, Buffer*/\n\n// Modern browsers have atob and btoa defined\nif ( typeof atob == 'function' ) {\n    _atob = atob;\n}\nelse\n// Node.js\nif ( typeof Buffer == 'function' ) {\n    _atob = (data) => new Buffer(data, 'base64').toString('binary');\n}\n// Out custom implementation (polyfill)\nelse {\n    var b64i;\n    const wsReg = /[\\t\\n\\r\\x20\\x0C]+/g;\n\n    const chr = String.fromCharCode;\n    // if ( typeof chr.bind == 'function' ) chr = chr.bind(String);\n\n    // Decodes UTF8 or byte string\n    _atob = function _atob(data) {\n        if (!data) return data;\n        data = String(data).replace(wsReg, '');\n\n        var o1, o2, o3, h1, h2, h3, h4, bits\n        ,   l = data.length\n        ,   i = 0\n        ,   ac = 0\n        ,   dec = ''\n        ,   tmp_arr = []\n        ;\n        if(b64i == undefined) {\n            b64i = {};\n            for(var j = 0, bl = b64.length; j < bl; j++) b64i[b64.charAt(j)] = j;\n        }\n\n        do {\n            // unpack four hexets into three octets using index points in b64\n            h1 = b64i[data.charAt(i++)];\n            h2 = b64i[data.charAt(i++)];\n            h3 = b64i[data.charAt(i++)];\n            h4 = b64i[data.charAt(i++)];\n\n            bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n            o1 = bits >> 16 & 0xff;\n            o2 = bits >> 8 & 0xff;\n            o3 = bits & 0xff;\n\n            if (h3 == 64) {\n                tmp_arr[ac++] = chr(o1);\n            }\n            else if (h4 == 64) {\n                tmp_arr[ac++] = chr(o1, o2);\n            }\n            else {\n                tmp_arr[ac++] = chr(o1, o2, o3);\n            }\n        } while (i < l);\n\n        dec = tmp_arr.join('');\n\n        return dec.replace(/\\0+$/, '');\n    };\n}\n\nexport default _atob;\n","\nimport b64 from './digits';\n\nvar _btoa;\n\n/*globals btoa, Buffer*/\n\n// Modern browsers have atob and btoa defined\nif ( typeof btoa == 'function' ) {\n    _btoa = btoa;\n}\nelse\n// Node.js\nif ( typeof Buffer == 'function' ) {\n    _btoa = (data) => new Buffer(data, 'binary').toString('base64');\n}\n// Out custom implementation (polyfill)\nelse {\n    // Encodes UTF8 or byte string\n    _btoa = function _btoa(data) {\n        if (!data) return data;\n\n        var o1, o2, o3, h1, h2, h3, h4, bits\n        ,   i = 0\n        ,   ac = 0\n        ,   enc = ''\n        ,   tmp_arr = []\n        ;\n        do {\n            // pack three octets into four hexets\n            o1 = data.charCodeAt(i++);\n            o2 = data.charCodeAt(i++);\n            o3 = data.charCodeAt(i++);\n\n            bits = o1 << 16 | o2 << 8 | o3;\n\n            h1 = bits >> 18 & 0x3f;\n            h2 = bits >> 12 & 0x3f;\n            h3 = bits >> 6 & 0x3f;\n            h4 = bits & 0x3f;\n\n            // use hexets to index into b64, and append result to encoded string\n            tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n        } while (i < data.length);\n\n        enc = tmp_arr.join('');\n\n        var r = data.length % 3;\n\n        return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n    };\n}\n\nexport default _btoa;\n","\n/*globals unescape, escape*/\n\n/// Encode multi-byte into UTF-8 string\nexport const utf8Encode = (str) => unescape( encodeURI( str ) );\n\n/// Decode UTF-8 string to multi-byte string\nexport const utf8Decode = (str) => decodeURIComponent( escape( str ) );\n","/**\n*  Base64 string encoding and decoding utility.\n*\n*  play @ https://duzun.me/playground/encode#base64Encode=Test%20String%20\n*\n*  original of _btoa and _atob by: Tyler Akins (http://rumkin.com)\n*\n*\n*  @license MIT\n*  @version 2.0.0\n*  @umd AMD, Browser, CommonJs\n*  @author Dumitru Uzun (DUzun.Me)\n*/\n\nexport const VERSION = '2.0.0';\n\nimport _atob from './atob';\nimport _btoa from './btoa';\nimport { utf8Encode, utf8Decode } from './utf8';\n\n\n// Decodes byte-string - 8bit per char - either btoa()'s return or byteUrlEncode()'s return\nexport function byteDecode(data) {\n    let ret = data;\n    if(ret) {\n        ret = _atob(String(ret)\n            .replace(/_/g, '/')\n            .replace(/-/g, '+'))\n        ;\n    }\n    return ret;\n}\n\n// Encode byte-string - 8bit per char - used for binary data\nexport { _btoa as byteEncode };\n\n// Encodes multi-byte string as utf8 (common in JS)\nexport function mbEncode(data) {\n    if(!data) return data;\n    return _btoa(utf8Encode(data));\n}\n\n// Decodes to multi-byte string if utf8-encoded\nexport function mbDecode(data, force_utf8) {\n    let ret = byteDecode(data);\n    if(ret) {\n        if(force_utf8) {\n            return utf8Decode(ret);\n        }\n        else {\n            try {\n                ret = utf8Decode(ret);\n            } catch(err) {}\n        }\n    }\n    return ret;\n}\n\n// Encode for URL\nexport function byteUrlEncode(data) {\n    let ret = _btoa(data);\n    return ret && ret.replace(/\\=+$/, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n// Decode from byteUrlEncode()\nexport function byteUrlDecode(data, force_utf8) {\n    let ret = data;\n    if(ret) {\n        ret += '==='.substr(0, 3-(ret.length+3)%4);\n        ret = byteDecode(ret, force_utf8);\n    }\n    return ret;\n}\n\n// Encode as base64 a multi-byte string as utf8 for URL\nexport function mbUrlEncode(data) {\n    if(!data) return data;\n    let ret = utf8Encode(data);\n    return byteUrlEncode(ret);\n}\n\n// Decode base64 of utf8 encoded text to multi-byte string\nexport function mbUrlDecode(data) {\n    let ret = byteUrlDecode(data);\n    return ret && utf8Decode(ret);\n}\n\n\n// multi-byte string - common JS String - used for text data - get encoded/decoded to/from utf8\nexport { mbEncode as encode };\nexport { mbDecode as decode };\n\n// multi-byte string - common JS String - used for text data - get encoded/decoded to/from utf8 for URL\nexport { mbUrlEncode as urlEncode };\nexport { mbUrlDecode as urlDecode };\n\nexport { utf8Encode as mb2utf8 };\nexport { utf8Decode as utf82mb };\n\nexport { _atob as _atob };\nexport { _btoa as _btoa };\n\n// Make sure atob and btoa exists in the environment\nexport function polyfill(global) {\n    if ( !global ) {\n        global = typeof window == 'undefined' ? typeof global == 'undefined' ? typeof self == 'undefined' ? this : self : global : window;\n    }\n    if ( global ) {\n        if ( typeof atob == 'undefined' ) {\n            global.atob = _atob;\n        }\n        if ( typeof btoa == 'undefined' ) {\n            global.btoa = _btoa;\n        }\n    }\n}\n\nexport function bindProto(__) {\n    const __ex = typeof Object.defineProperty == 'function'\n          ? (name, func/*, proto*/) => {\n              Object.defineProperty(/*proto||*/__, name, {\n                  value: func,\n                  configurable: true,\n                  enumerable: false,\n                  writeable: true\n              });\n          }\n          : (name, func/*, proto*/) => {\n              // Take care with (for ... in) on strings!\n              (/*proto||*/__)[name] = func;\n          }\n    ;\n\n    __ex('base64ByteEncode', function () { return _btoa(this); });\n    __ex('base64ByteDecode', function () { return byteDecode(this); });\n\n    __ex('base64Encode', function () { return mbEncode(this); });\n    __ex('base64Decode', function () { return mbDecode(this); });\n\n    __ex('base64ByteUrlEncode', function () { return byteUrlEncode(this); });\n    __ex('base64ByteUrlDecode', function () { return byteUrlDecode(this); });\n\n    __ex('base64UrlEncode', function () { return mbUrlEncode(this); });\n    __ex('base64UrlDecode', function () { return mbUrlDecode(this); });\n}\n\n// Add String.prototype methods:\nbindProto(String.prototype);\n"],"names":["_atob","atob","Buffer","data","toString","b64i","wsReg","chr","String","fromCharCode","replace","o1","o2","o3","h1","h2","h3","h4","bits","l","length","i","ac","dec","tmp_arr","undefined","j","bl","b64","charAt","join","_btoa","btoa","enc","charCodeAt","r","slice","utf8Encode","str","unescape","encodeURI","utf8Decode","decodeURIComponent","escape","VERSION","byteDecode","ret","mbEncode","mbDecode","force_utf8","err","byteUrlEncode","byteUrlDecode","substr","mbUrlEncode","mbUrlDecode","polyfill","global","window","self","bindProto","__","__ex","Object","defineProperty","name","func","prototype"],"mappings":"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"}